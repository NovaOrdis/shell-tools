#!/bin/bash

display_usage()
{
cat <<EOF

Usage: searchjar <target_dir> <pattern>

By default, it silently ignores the JARs that cannot be open, possibly because their format is corrupted.
This is a technique used by the WildFly patch installer to make sure that older JARs are not used by mistake.

The '/' in the pattern string are replaced with '.' when searching. This replacement is quite useful when
looking for classes that caused a NoClassDefFoundError:

Exception in thread "main" java.lang.NoClassDefFoundError: org/xnio/Option

EOF
}

if [ "$1" = "" -o "$i" = "-help" -o "$i" = "--help" ]; then
    display_usage;
    exit 0;
fi

pattern=$1
target_dir=$2

#
# process the pattern, replace '/' with '.'
#
pattern=${pattern//\//.}

[ -z "${target_dir}" ] && target_dir="."

if [ ! -d ${target_dir} ]; then
    echo "No such directory: ${target_dir}" 1>&2
    exit 1
fi

find ${target_dir} -name "*.[jw]ar" | while read i; do

        #echo -n "."

        if jar tfv ${i} 2>/dev/null | grep "${pattern}" > ./.searchjar.tmp; then
                found=`cat ./.searchjar.tmp`
                echo "${i}: $found"
        fi;
done

[ -f ./.searchjar.tmp ] && rm ./.searchjar.tmp


