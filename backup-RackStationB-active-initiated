#!/bin/bash

FILESYSTEMS_TO_BACKUP="\
/volume1/base \
/volume1/dovecot \
/volume1/jspwiki \
/volume1/timesnap \
/volume2/livingroom \
/volume3/projects \
/volume4/backups"

LOCAL_RACKSTATIONB_MOUNT_POINT=/rackstationb

function display_help() {

cat <<EOF

Utility to backup selected RackStation filesystem from Rackstation on a backup node, rsync/ssh.
Needs BACKUP_NODE_ADDRESS, BACKUP_NODE_PORT to be setup in the environment, or passed on command line.

EOF

}

function main() {

    local backup_node_address="${BACKUP_NODE_ADDRESS}"
    local backup_node_port="${BACKUP_NODE_PORT}"

    while [ -n "$1" ]; do

        if [ "$1" = "help" -o "$1" = "--help" ]; then

            display_help
            exit 0

        elif [ "${1:0:10}" = "--address=" ]; then

              backup_node_address=${1:10}

        elif [ "${1:0:7}" = "--port=" ]; then

              backup_node_port=${1:7}
        fi

        shift
    done

    [ -z "${backup_node_address}" ] && { echo "backup node address not provided. Set it as value of BACKUP_NODE_ADDRESS environment variable or with --address=... command line parameter" 1>&2; exit 1; }
    [ -z "${backup_node_port}" ] && { echo "backup node port not provided. Set it as value of BACKUP_NODE_PORT environment variable or with --port=... command line parameter" 1>&2; exit 1; }

#    for i in ${FILESYSTEMS_TO_BACKUP}; do
#        backup-filesystem ${i} || echo "failed to backup filesystem ${i}" 1>&2;
#    done
}

function backup-filesystem() {

    local rackstation_filesystem=$1

    echo "backing up ${rackstation_filesystem} ..."

    local volume_dir=${rackstation_filesystem/\//}
    volume_dir=${volume_dir%%/*}

    local local_dir=${LOCAL_RACKSTATIONB_MOUNT_POINT}/${volume_dir}

    if [ ! -d ${local_dir} ]; then

        mkdir ${local_dir} || { echo "failed to create directory ${local_dir}" 1>&2; return 1; }

    fi

    rsync -avzhe ssh --rsync-path=/usr/syno/bin/rsync root@${RACKSTATION_IP}:${rackstation_filesystem} ${local_dir} && echo "${rackstation_filesystem} ok"
}

main "$@"

