#!/usr/bin/env bash

ld=$(dirname $0)/../lib
for i in bash.shlib jenkins.shlib; do [ -f ${ld}/${i} ] && source ${ld}/${i} || { echo "[error]: ${ld}/${i} not found" 1>&2; exit 1; } done

VERSION=0.1.0

PIPELINE_NAME=c3server-k8s
BRANCH=epic/cloud/team/k8sonly/develop
TARGET_FILE_NAME=tests.json

function usage() {
cat <<EOF

Collect test metadata for the specified run on branch ${BRANCH} on the multi-branch pipeline
${PIPELINE_NAME}. The run (build) number and the target directory must be specified as arguments. The test metadata will be
collected in a ${TARGET_FILE_NAME} file that will be created in the target directory.

Usage:

    $(basename $0) [options] <run-number> [target-dir]

If the target directory is not specified, the logs are collected in the current directory. If the target directory does
not exist, it will be created.

Options:

    -p|--pipeline <pipeline-name> Specifies the pipeline. The default is ${PIPELINE_NAME}.

    -b|--branch <branch> Specifies a branch. By default is ${BRANCH}.

    --preserve-tmp-dir Preserve temporary directories.


EOF
}
function main() {

    process-common-arguments "$@" && set -- "${ARGS[@]}" || { echo "failed to process common arguments" 1>&2; exit 1; }

    ${HELP} || [[ -z $1 ]] && { usage; exit 0; }

    unset ARGS; declare -a ARGS
    declare -A OPTIONS
    OPTIONS["--pipeline"]="string -p"
    OPTIONS["--branch"]="string -b"
    OPTIONS["--preserve-tmp-dir"]="boolean"
    process-options "$@"
    fail-on-unknown-arguments 2

    local pipeline=${OPTIONS["--pipeline"]:-${PIPELINE_NAME}}
    local branch=${OPTIONS["--branch"]:-${BRANCH}}
    local preserve_tmp_dir=${OPTIONS["--preserve-tmp-dir"]:false}

    local run_id=${ARGS[0]}
    local target_dir=${ARGS[1]:-$(pwd)}

    debug "pipeline: ${pipeline}"
    debug "branch: ${branch}"
    debug "run_id: c"
    debug "target_dir: ${target_dir}"

    if [[ ! -d ${target_dir} ]]; then
        mkdir -p "${target_dir}" && info "created directory ${target_dir}" || fail "mkdir -p \"${target_dir}\" failed"
    fi

    local command="$(dirname $0)/jenq"
    ${VERBOSE} && command="${command} --verbose"
    ${preserve_tmp_dir} && command="${command} --preserve-tmp-dir"
    command="${command} tests ${pipeline} ${branch} ${run_id}"
    info "${command} > \"${target_dir}/tests.json\""
    ${command} > "${target_dir}/${TARGET_FILE_NAME}"
}

main "$@"
